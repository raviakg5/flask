name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on PRs to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use Ubuntu for the GitHub runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python (if you're using Python in the Dockerfile)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11  # Set the Python version to use

      # Step 3: List files in the repository to verify context
      - name: List files in the repository
        run: |
          echo "Listing all files in the repository:"
          ls -alh

      # Step 4: Set up Docker Buildx for multi-platform support (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Verify Docker version and build environment
      - name: Check Docker version
        run: |
          docker --version
          docker info

      # Step 7: Verify that Dockerfile exists
      - name: Check if Dockerfile exists
        run: |
          if [ -f "Dockerfile" ]; then echo "Dockerfile exists."; else echo "Dockerfile does not exist."; fi

      # Step 8: Build Docker Image and Tag It
      - name: Build Docker Image
        run: |
          echo "Building Docker image..."
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/flask-app-repo:latest .
          echo "Docker image built and tagged."
          docker images  # List the images to verify that the image is built

      # Step 9: Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          echo "Pushing Docker image to Docker Hub..."
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/flask-app-repo:latest
          echo "Docker image pushed to Docker Hub."

      # Step 10: Install Minikube and kubectl
      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          curl -LO "https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Step 11: Start Minikube Cluster
      - name: Start Minikube Cluster
        run: |
          minikube start --driver=docker

      # Step 12: Set up Kubernetes CLI (kubectl)
      - name: Set up Kubernetes CLI
        run: |
          kubectl config use-context minikube

      # Step 13: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl rollout status deployment/flask-app-deployment

      # Step 14: Expose Service and Get Minikube URL
      - name: Expose Service and Get Minikube URL
        run: |
          kubectl expose deployment flask-app-deployment --type=NodePort --name=flask-app-service
          minikube service flask-app-service --url
