name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main  # Trigger the workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on PRs to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Use Ubuntu for the GitHub runner

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx for multi-platform support (optional)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Build the Docker Image and Tag It
      - name: Build Docker Image
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/flask-app-repo:latest .
          docker tag docker.io/${{ secrets.DOCKER_USERNAME }}/flask-app-repo:latest docker.io/${{ secrets.DOCKER_USERNAME }}/flask-app-repo:latest

      # Step 5: Push Docker Image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/flask-app-repo:latest

      # Step 6: Install Minikube and kubectl
      - name: Set up Minikube
        run: |
          curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube
          sudo mv minikube /usr/local/bin/
          curl -LO "https://dl.k8s.io/release/v1.22.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # Step 7: Start Minikube Cluster
      - name: Start Minikube Cluster
        run: |
          minikube start --driver=docker

      # Step 8: Set up Kubernetes Config for Minikube
      - name: Set up Kubernetes CLI (kubectl)
        run: |
          kubectl config use-context minikube

      # Step 9: Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/deployment.yaml  # Make sure you have a valid deployment.yaml file
          kubectl rollout status deployment/flask-app-deployment  # Wait for the deployment to complete

      # Step 10: Expose the service and Get Minikube URL
      - name: Expose Service and Get Minikube URL
        run: |
          kubectl expose deployment flask-app-deployment --type=NodePort --name=flask-app-service
          minikube service flask-app-service --url
